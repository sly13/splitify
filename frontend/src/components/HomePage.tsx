import React, { useState } from "react";
import { useNavigate, useSearchParams } from "react-router-dom";
import { useTelegram } from "../hooks/useTelegram";
import { useBillStore } from "../stores/billStore";
import { BillStatus } from "../types/app";
import type { Bill, Participant } from "../types/app";

const HomePage: React.FC = () => {
  const navigate = useNavigate();
  const [searchParams, setSearchParams] = useSearchParams();
  const { user, hapticFeedback } = useTelegram();
  const { bills, isLoading, fetchBills, deleteBill } = useBillStore();
  const [deleteModal, setDeleteModal] = useState<{
    billId: string;
    billTitle: string;
  } | null>(null);

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∞–± –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const currentTab = searchParams.get("tab") || "new";

  React.useEffect(() => {
    fetchBills();
  }, [fetchBills]);

  // –û—á–∏—â–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –µ—Å–ª–∏ –Ω–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–∞–±–∞
  React.useEffect(() => {
    const validTabs = ["new", "in_progress", "completed"];
    if (!validTabs.includes(currentTab)) {
      setSearchParams({ tab: "new" });
    }
  }, [currentTab, setSearchParams]);

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∞–±—ã –∏ –∏—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞—Ç—É—Å–∞–º
  const tabs = [
    { key: "new", label: "–ù–æ–≤—ã–µ", status: "new" },
    { key: "in_progress", label: "–í –ø—Ä–æ—Ü–µ—Å—Å–µ", status: "in_progress" },
    { key: "completed", label: "–ó–∞–≤–µ—Ä—à–µ–Ω—ã", status: "completed" },
  ];

  // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—á–µ—Ç–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ç–∞–±—É
  const filteredBills = bills.filter(bill => {
    if (currentTab === "new") {
      // –ù–æ–≤—ã–µ - –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å—á–µ—Ç–∞, –≥–¥–µ –Ω–∏–∫—Ç–æ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª
      return (
        bill.status === BillStatus.OPEN &&
        bill.participants.every(p => p.paymentStatus !== "paid")
      );
    } else if (currentTab === "in_progress") {
      // –í –ø—Ä–æ—Ü–µ—Å—Å–µ - –æ—Ç–∫—Ä—ã—Ç—ã–µ —Å—á–µ—Ç–∞, –≥–¥–µ –∫—Ç–æ-—Ç–æ –æ–ø–ª–∞—Ç–∏–ª, –Ω–æ –Ω–µ –≤—Å–µ
      return (
        bill.status === BillStatus.OPEN &&
        bill.participants.some(p => p.paymentStatus === "paid") &&
        bill.participants.some(p => p.paymentStatus !== "paid")
      );
    } else if (currentTab === "completed") {
      // –ó–∞–≤–µ—Ä—à–µ–Ω—ã - –∑–∞–∫—Ä—ã—Ç—ã–µ —Å—á–µ—Ç–∞ –∏–ª–∏ –≥–¥–µ –≤—Å–µ –æ–ø–ª–∞—Ç–∏–ª–∏
      return (
        bill.status === BillStatus.CLOSED ||
        (bill.status === BillStatus.OPEN &&
          bill.participants.every(p => p.paymentStatus === "paid"))
      );
    }
    return true;
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Ç–∞–±–∞
  const handleTabChange = (tabKey: string) => {
    hapticFeedback.impact("light");
    setSearchParams({ tab: tabKey });
  };

  const handleCreateBill = () => {
    hapticFeedback.impact("medium");
    navigate("/create");
  };

  const handleBillClick = (billId: string) => {
    hapticFeedback.impact("medium");
    navigate(`/bill/${billId}`);
  };

  const handleDeleteClick = (
    e: React.MouseEvent,
    billId: string,
    billTitle: string
  ) => {
    e.stopPropagation();
    hapticFeedback.impact("medium");
    setDeleteModal({ billId, billTitle });
  };

  const handleConfirmDelete = async () => {
    if (!deleteModal) return;

    try {
      hapticFeedback.impact("heavy");
      await deleteBill(deleteModal.billId);
      setDeleteModal(null);
    } catch (error) {
      console.error("Failed to delete bill:", error);
      // –û—à–∏–±–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –≤ store
    }
  };

  const handleCancelDelete = () => {
    hapticFeedback.impact("light");
    setDeleteModal(null);
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç (–Ω–æ–≤—ã–π —Å—á–µ—Ç –±–µ–∑ –ø–ª–∞—Ç–µ–∂–µ–π)
  const canDeleteBill = (bill: Bill) => {
    return (
      bill.status === BillStatus.OPEN &&
      bill.participants.every((p: Participant) => p.paymentStatus !== "paid")
    );
  };

  return (
    <div className="home-page">
      <div className="header">
        <h1>üí∞ Crypto Split Bill</h1>
        <p>–ü—Ä–∏–≤–µ—Ç, {user?.first_name}! üëã</p>
        
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ */}
        <div className="server-info">
          <details>
            <summary>üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ</summary>
            <div className="server-details">
              <p><strong>API URL:</strong> {import.meta.env.VITE_API_BASE_URL || '–ù–µ –∑–∞–¥–∞–Ω'}</p>
              <p><strong>Socket URL:</strong> {import.meta.env.VITE_SOCKET_URL || '–ù–µ –∑–∞–¥–∞–Ω'}</p>
              <p><strong>–†–µ–∂–∏–º:</strong> {import.meta.env.DEV ? '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞' : '–ü—Ä–æ–¥–∞–∫—à–Ω'}</p>
              <p><strong>–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º:</strong> {import.meta.env.VITE_TEST_MODE === 'true' ? '–í–∫–ª—é—á–µ–Ω' : '–í—ã–∫–ª—é—á–µ–Ω'}</p>
            </div>
          </details>
        </div>
      </div>

      <div className="actions">
        <button className="primary-button" onClick={handleCreateBill}>
          üìù –°–æ–∑–¥–∞—Ç—å —Å—á—ë—Ç
        </button>
      </div>

      <div className="bills-section">
        <h2>–ú–æ–∏ —Å—á–µ—Ç–∞</h2>

        {/* –¢–∞–±—ã */}
        <div className="tabs">
          {tabs.map(tab => (
            <button
              key={tab.key}
              className={`tab ${currentTab === tab.key ? "active" : ""}`}
              onClick={() => handleTabChange(tab.key)}
            >
              {tab.label}
            </button>
          ))}
        </div>

        {isLoading ? (
          <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        ) : filteredBills.length === 0 ? (
          <div className="empty-state">
            <p>
              {currentTab === "new" && "–£ –≤–∞—Å –Ω–µ—Ç –Ω–æ–≤—ã—Ö —Å—á–µ—Ç–æ–≤"}
              {currentTab === "in_progress" && "–£ –≤–∞—Å –Ω–µ—Ç —Å—á–µ—Ç–æ–≤ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ"}
              {currentTab === "completed" && "–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å—á–µ—Ç–æ–≤"}
            </p>
            {currentTab === "new" && (
              <p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —Å—á—ë—Ç –∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É</p>
            )}
          </div>
        ) : (
          <div className="bills-list">
            {filteredBills.map(bill => (
              <div key={bill.id} className="bill-card">
                <div
                  className="bill-card-content"
                  onClick={() => handleBillClick(bill.id)}
                >
                  <div className="bill-info">
                    <h3>{bill.title}</h3>
                    <p>
                      {bill.totalAmount} {bill.currency}
                    </p>
                    <span className={`status ${bill.status}`}>
                      {bill.status}
                    </span>
                  </div>
                </div>
                {canDeleteBill(bill) && (
                  <button
                    className="delete-bill-btn"
                    onClick={e => handleDeleteClick(e, bill.id, bill.title)}
                    title="–£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç"
                  >
                    üóëÔ∏è
                  </button>
                )}
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
      {deleteModal && (
        <div className="modal-overlay" onClick={handleCancelDelete}>
          <div className="modal-content" onClick={e => e.stopPropagation()}>
            <div className="modal-header">
              <h3>–£–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç?</h3>
              <button className="close-button" onClick={handleCancelDelete}>
                ‚úï
              </button>
            </div>
            <div className="modal-body">
              <p>
                –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—á–µ—Ç{" "}
                <strong>"{deleteModal.billTitle}"</strong>?
              </p>
              <p className="warning-text">
                ‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –°—á–µ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.
              </p>
              <div className="modal-actions">
                <button
                  className="secondary-button"
                  onClick={handleCancelDelete}
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button className="danger-button" onClick={handleConfirmDelete}>
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default HomePage;
